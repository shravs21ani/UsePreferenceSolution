name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'src/UserPreference.Functions'
  AZURE_WEBAPP_NAME: 'userpreference-api'
  AZURE_FUNCTIONAPP_NAME: 'userpreference-functions'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test --no-build --verbosity normal --configuration Release
      
    - name: Publish Blazor WASM
      run: dotnet publish src/UserPreference.BlazorWasm/UserPreference.BlazorWasm.csproj -c Release -o ./publish/blazor-wasm
      
    - name: Publish API
      run: dotnet publish src/UserPreference.Api/UserPreference.Api.csproj -c Release -o ./publish/api
      
    - name: Publish Functions
      run: dotnet publish src/UserPreference.Functions/UserPreference.Functions.csproj -c Release -o ./publish/functions
      
    - name: Upload Blazor WASM artifacts
      uses: actions/upload-artifact@v4
      with:
        name: blazor-wasm
        path: ./publish/blazor-wasm
        
    - name: Upload API artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api
        path: ./publish/api
        
    - name: Upload Functions artifacts
      uses: actions/upload-artifact@v4
      with:
        name: functions
        path: ./publish/functions

  # Commented out Azure deployment for testing - uncomment when Azure is ready
  # deploy-infrastructure:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Setup Azure CLI
  #     uses: azure/setup-azure-cli@v3
  #     
  #   - name: Login to Azure
  #     uses: azure/login@v2
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}
  #       
  #   - name: Deploy Bicep template
  #     run: |
  #       az deployment group create \
  #         --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
  #         --template-file infra/main.bicep \
  #         --parameters \
  #           location=${{ secrets.AZURE_LOCATION }} \
  #           environment=Production \
  #           appInsightsLocation=${{ secrets.AZURE_LOCATION }}
  #         
  #   - name: Deploy API to Azure Web App
  #     uses: azure/webapps-deploy@v3
  #     with:
  #       app-name: ${{ env.AZURE_WEBAPP_NAME }}
  #       package: ./src/UserPreference.Api
  #       publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
  #       
  #   - name: Deploy Functions to Azure Functions
  #     uses: azure/functions-action@v1
  #       app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
  #       package: ./src/UserPreference.Functions
  #       publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  # Commented out Blazor deployment for testing - uncomment when Azure is ready
  # deploy-blazor:
  #   needs: [build-and-test, deploy-infrastructure]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #   - name: Download Blazor WASM artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       name: blazor-wasm
  #       path: ./blazor-wasm
  #       
  #   - name: Setup Azure CLI
  #     uses: azure/setup-azure-cli@v3
  #     
  #   - name: Login to Azure
  #     uses: azure/login@v2
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}
  #       
  #   - name: Deploy to Azure Storage (Static Website)
  #     run: |
  #       az storage blob upload-batch \
  #         --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT }} \
  #         --auth-mode key \
  #         --source ./blazor-wasm/wwwroot \
  #         --destination '$web' \
  #         --overwrite

  # Add a simple success message for testing
  success-message:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Success Message
      run: |
        echo "ðŸŽ‰ CI/CD Pipeline completed successfully!"
        echo "âœ… Build and test passed"
        echo "ðŸ“¦ Artifacts created and uploaded"
        echo "ðŸš€ Ready for Azure deployment when configured"
        echo ""
        echo "Next steps:"
        echo "1. Configure Azure resources"
        echo "2. Uncomment deployment jobs in workflow"
        echo "3. Push changes to trigger full deployment"
